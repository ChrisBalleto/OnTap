@model OnTap.ViewModels.SearchBarsViewModel
@{
    ViewBag.Title = "SearchBars";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<style>
     /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
     #map {
         height: 600px;
     }
     body {
        background-image: url("../../Content/images/randombeertaps.jpg");
        background-repeat: no-repeat;
        height: 100%;
        width: 100%;
        background-size: cover;
        background-color: rgba(255, 255, 255, 0.5);
        opacity: 50;
    }
     .dropdown:hover .dropdown-content {
    display: block;
}
</style>




<div class="panel" style="border:none; background-color:rgba(20, 20, 20, 0.90);">
    <h2>Bar Search</h2>
    @using (Html.BeginForm("FilterSearch", "Patron", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        <div class="row">
            <div class="col-lg-6">
                <div class="form-group ">
                    <label> Packages </label>
                    @Html.DropDownListFor(m => m.SportsPackage.Id, new SelectList(Model.SportsPackages, "Id", "PackageName"), "Select Package", new { @class = "form-control" })
                </div>
                <br />
                <div style="padding: 20px, 20px;">
                    <input type="submit" class="btn btn-default" value="Filter" style="padding-right: 40px; padding-left: 40px;"/>
                </div>
            </div>
            
            <div class="col-lg-6">
                <div class="form-group ">
                    <label> Tap Beers </label>
                    @Html.DropDownListFor(m => m.TapBeer.Id, new SelectList(Model.TapBeers, "Id", "Name"), "Select Beer", new { @class = "form-control" })
                </div>
                <div class="form-group ">
                    <label> Games </label>
                    @Html.DropDownListFor(m => m.BarGame.Id, new SelectList(Model.BarGames, "Id", "GameName"), "Select Game", new { @class = "form-control" })
                </div>
                @Html.HiddenFor(m => m.Bars)
                    
                
            </div>
        </div>
    }

    <div class="row">
        <div class="col-lg-12">
            <table id="bars" class="table table-condensed table-responsive panel-warning" style="margin-bottom: 15px; border:none;">
                <thead class="panel-heading panel-warning" style="border:none; ">
                    <tr>
                        <th>Bar Name</th>
                        <th>Rating</th>
                        <th>Address</th>
                        <th>Wifi</th>
                        <th>Juke</th>
                        <th>Sports Packages</th>
                        <th>Bar Games</th>
                        <th>Taps</th>
                        <th>Follow?</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var bar in Model.Bars)
            {
                        <tr>
                            <td>
                                <div class="dropdown">
                                    @Html.ActionLink(bar.BarName, "PatronViewOfBarDash", "Patron", new { id = bar.Id }, new { @class = "btn btn-warning" })
                                    <ul class="dropdown dropdown-menu dropdown-content">
                                        <li>@bar.BarDescription</li>
                                    </ul>
                                </div>
                            </td>
                            @if (bar.BarReviews.Count == 0)
                            {
                                <td>NA</td>
                    }
                            else
                            {
                                <td>@bar.Rating</td>
                            }
                            
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-content" type="button" data-toggle="dropdown">
                                        Address
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown dropdown-menu dropdown-content">
                                        <li>@bar.StreetOne</li>
                                        <li>@bar.City.CityName</li>
                                        <li>@bar.State.StateName</li>
                                        <li>@bar.ZipCode.ZipCodeNum</li>
                                    </ul>
                                </div>
                            </td>
                            <td>@bar.GetWifiYesNo</td>
                            <td>@bar.GetJukeboxYesNo</td>
                            <td>
                                @Html.DropDownList("See Packages", new SelectList(bar.SportsPackages, "Id", "PackageName"), "See Packages", new { @class = "form-control" })
                                @*<ul>

                                        @foreach( var package in bar.SportsPackages)
                                        {
                                        <li>@package.PackageName</li>
                                        }
                                    </ul>*@
                            </td>
                            <td>
                                @Html.DropDownList("See Games", new SelectList(bar.BarGames, "Id", "GameName"), "See Games", new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.DropDownList("See Taps", new SelectList(bar.TapBeers, "Id", "Name"), "See Taps", new { @class = "form-control" })
                            </td>
                            @if (!Model.Patron.FollowedBars.Contains(bar))
                {
                                <td>@Html.ActionLink("Follow", "FollowBar", "Patron", new { id = bar.Id }, new { @class = "btn btn-success" }) </td>
                            }
                            else
                            {
                                <td>@Html.ActionLink("Unfollow", "UnFollowBar", "Patron", new { id = bar.Id }, new { @class = "btn btn-danger" }) </td>
                            }

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

    <div id="map"></div>



    <script type="text/javascript">
        $(document).ready(function () {
            $('#bars').DataTable({
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
            });


            $('#bars').on('click', '.js-delete', function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete special?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "../../api/specials/" + button.attr("data-special-id"),
                            method: "DELETE",
                            success: function () {
                                button.parents("tr").remove();
                                console.log("SUCCESS")
                            }
                        });
                    }
                });
            });
        });
        // Note: This example requires that you consent to location sharing when
        // prompted by your browser. If you see the error "The Geolocation service
        // failed.", it means you probably did not give permission for the browser to
        // locate you.



        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 13
            });
            var infoWindow = new google.maps.InfoWindow({ map: map });

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent('You');
                    map.setCenter(pos);
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }



            @foreach (var bar in Model.Bars) {
                <text>
            @*var latLng = new google.maps.LatLng(@(Model.Latitude), @(Model.Longitude));*@
            var address = '@(bar.GetParsedAddress)';
            var title = '@(bar.BarName)';
            var contentString = '<h3>' + title + '</h3>'

            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });

            var geocoder = new google.maps.Geocoder();
            var city = '@(bar.City.CityName)';
            var state = '@(bar.State.StateName)';
            var searchAddress = address + ',+' + city + ',+' + state;
            var parsedSearchAddress = searchAddress.replace(' ', "+");



            geocoder.geocode({ 'address': searchAddress }, function (results, status) {

                if (status == google.maps.GeocoderStatus.OK) {

                    address = results[0].geometry.location;
                    var image = {
                        url: "../Content/images/bluedart.png",
                        // This marker is 20 pixels wide by 32 pixels high.
                        size: new google.maps.Size(500, 500),
                        // The origin for this image is (0, 0).
                        origin: new google.maps.Point(30, 30
                           ),
                        // The anchor for this image is the base of the flagpole at (30, 0).
                        anchor: new google.maps.Point(0, 30)
                    };

                    var marker = new google.maps.Marker({
                        position: address,
                        title: title,
                        map: map,
                        draggable: false,
                        //icon: image,
                        animation: google.maps.Animation.DROP,
                    });
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.open(map, marker);
                    });

                }
            });

            </text>




            }
        }


        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA63adaHz7VvTA5O_MD7PNuXtEHqJ4x2oQ&callback=initMap&libraries=places,visualization">
    </script>
